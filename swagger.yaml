openapi: 3.0.3
info:
  title: Patrol Management Application
  version: '1'
  description: >-
    Patrol Management Application  allow a user to create checkpoint and assign them to a Patrol route, members of staff can be assigned to the Patrol route.  The Patrol route can be scheduled for a specific time and how long the patrol should take can be set for the route.

    A user who has been assigned to the route can see the route plotted on a map, the system will show where the checkpoints are for the route
    
    The user will need to carry out a risk assessment before they start the patrol
    
    A user will be able to check-in to the checkpoints as they carry out the patrol, the system will record the time they checked in
    
    The user will be able to record any incidents they find as they carry out the patrol
    
    There will be a set of reports the user can view based on the patrols that have been carried out.
  contact:
    email: gift.felix@zinc.systems
  license:
    name: Patrol Management API 1.0
    url: >-
      https://docs.google.com/document/d/1gWhnxz6eujdJUMlsHQoTdAXEBYS93VQluJaYdcj3ruE/edit
servers:
  -
    url: 'https://api.synapse.staging.zinc.systems/V1'
    description: 'Staging Server'
  -
    url: 'https://api.synapse.zinc.systems/V1'
    description: 'Production Server'
    
externalDocs:
  description: Find out more about Patrol Management APIs
  url: >-
    https://zinc-digital.atlassian.net/wiki/spaces/SPR/pages/2386526212/Patrol+Management+Requirements

tags:

  - name: API Communication
    description: Exposes endpoints related used for external communication
  - name: Checkpoint Service
    description: Exposes endpoints related to checkpoint service
  - name: Route Service
    description: Exposes endpoints related to route service
  - name: Patrol Service
    description: Exposes endpoints related to patrol service

security:
  - AWSAuthtoken: []
    AWSApiKey: []

paths:

  /routes/checkpoint/{checkpointId}/remove:
    delete:
      tags:
        - API Communication
      parameters:
      - $ref: '#/components/parameters/CheckpointId'
      summary: Remove checkpoint from route API
      responses:
        200:
          $ref: '#/components/responses/RouteBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
  
  /routes/validate-checkpoints:
    put:
      tags:
        - API Communication
      requestBody:
        content:
          application/json:
            schema:
              properties:  
                checkpointIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/Guid'
      summary: Check if patrol route has started
      responses:
        200:
          $ref: '#/components/responses/ValidateCheckpointResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'        

  /checkpoint:
    
    head:
      tags:
        - Checkpoint Service
      summary: Checks Whether There is Any data available For Sync 
      description: Checks Whether There is Any data available For Sync 
      parameters:
      - $ref: '#/components/parameters/QuerySiteId'
      responses:
        200:
          description: successful operation
        404:
          $ref: '#/components/responses/ErrorResponse'        
          
    post:
      tags:
        - Checkpoint Service
      summary: Add a new checkpoint
      description: Add a new checkpoint
      requestBody:
        $ref: '#/components/requestBodies/CheckpointRequest'
      responses:
        201:
          $ref: '#/components/responses/CheckpointGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

 
  /checkpoint/synchronize-offline-data:       
    post:
      tags:
        - Checkpoint Service
      summary: Synchronise offline checkpoint data
      description: Synchronise offline checkpoint data
      requestBody:
        $ref: '#/components/requestBodies/CheckpointSynchronisationPayloadRequest'
      responses:
        201:
          $ref: '#/components/responses/CheckpointSynchronisationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'  

  /checkpoint/byids:
    post:
      tags:
        - Checkpoint Service
      summary: Get a Checkpoint List Based On the ChceckPointIDs  
      description: Get a Checkpoint List Based On the ChceckPointIDs 
      requestBody:
        $ref: '#/components/requestBodies/CheckPointbyIdsRequest'

      responses:
        200:
          $ref: '#/components/responses/CheckpointListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'  
                    
  /checkpoint/find-all:
    post:
      tags:
        - Checkpoint Service
      summary: Retrieves a set of checkpoint entries range On the basis Of orgId passed Through token 
      description: 
        Retrieves the  set of Checkpoint entries

      requestBody:
        description: Enter set of site ids
        content:
          application/json:
            schema:
              title: Site Ids
              type: object
              properties:
                siteIds:
                  items:
                    type: integer
        
      parameters:
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Page"  
      - $ref: '#/components/parameters/FromDate'
      - $ref: '#/components/parameters/ToDate'
     
      responses:
        200:
          $ref: '#/components/responses/CheckpointListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'    
                      
    
  /checkpoint/verification-type:
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves verification type entries
      description: 
        Retrieves the verification type entries which have been created
      responses:
        200:
          $ref: '#/components/responses/VerificationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /checkpoint/{checkpointId}:
    parameters:
      - $ref: '#/components/parameters/CheckpointId'
    put:
      tags:
        - Checkpoint Service
      summary: Update an existing checkpoint
      description: Update an existing checkpoint
      requestBody:
        $ref: '#/components/requestBodies/CheckpointRequest'
      responses:
        200:
          $ref: '#/components/responses/CheckpointBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves checkpoint entry
      description: Retrieves a single checkpoint
      responses:
        200:
          $ref: '#/components/responses/CheckpointResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /checkpoint/status/{checkpointId}:        
    put:
      tags:
        - Checkpoint Service
      parameters:
      - $ref: '#/components/parameters/CheckpointId'
    
      requestBody:
        $ref: '#/components/requestBodies/CheckpointDisableRequest'
      summary: Enable/Disable checkpoint
      description:  Enable/Disable a checkpoint
      responses:
        200:
          $ref: '#/components/responses/CheckpointBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
          
  /checkpoint/site/{siteId}:
    get:
      tags:
        - Checkpoint Service
      summary: Retrieves checkpoint entries related to site
      description: Retrieves checkpoint entries related to site
      parameters:
      - $ref: '#/components/parameters/SiteId'
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/Page"  
      responses:
        200:
          $ref: '#/components/responses/CheckpointListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

      
          

  /routes:
    
    post:
      tags:
        - Route Service
      summary: Add a new route
      description: Add a new route
      requestBody:
        $ref: '#/components/requestBodies/RouteCheckpointRequest'
      responses:
        201:
          $ref: '#/components/responses/RouteGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
     
    head:
      tags:
        - Route Service
      summary:  Retrieves route 'Last-Modified' in the request header
      description: 
        Retrieves route 'Last-Modified' in the request header
      responses:
        200:
          description: successful operation
        404:
          $ref: '#/components/responses/ErrorResponse'
          
    get:
      tags:
        - Route Service
      summary: Retrieves set of route entries by orgid
      description: Retrieves set of route entries
        Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entriesand 'PageCount' max is 100.

      parameters:
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      - $ref: '#/components/parameters/FromDate'
      - $ref: '#/components/parameters/ToDate'
      responses:
        200:
          $ref: '#/components/responses/RouteListPaginationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
          
  
  /routes/synchronize-offline-data:       
    post:
      tags:
        - Route Service
      summary: Synchronise offline route data
      description: Synchronise offline route data
      requestBody:
        $ref: '#/components/requestBodies/RouteCheckpointSynchronisationPayloadRequest'
      responses:
        201:
          $ref: '#/components/responses/RouteSynchronisationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    
                  
  /routes/active:
    
    get:
      tags:
        - Route Service
      summary: Retrieves set of active route entries by orgid
      description: Retrieves set of active route entries
        Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entries.

      parameters:
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      responses:
        200:
          $ref: '#/components/responses/RouteListPaginationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'    
          
  
          
  /routes/disabled:
    
    get:
      tags:
        - Route Service
      summary: Retrieves set of disabled route entries by orgid
      description: Retrieves set of disabled route entries
        Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entries.

      parameters:
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      responses:
        200:
          $ref: '#/components/responses/RouteListPaginationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'            
    
  /routes/{routeId}:
    parameters:
      - $ref: '#/components/parameters/RouteId'
    patch:
      tags:
        - Route Service
      summary: Update an existing route
      description: Update an existing route
      requestBody:
        $ref: '#/components/requestBodies/RouteCheckpointRequest'
      responses:
        200:
          $ref: '#/components/responses/RouteBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Route Service
      summary: Retrieves route entry
      description: Retrieves a single route
      responses:
        200:
          $ref: '#/components/responses/RouteCheckpointResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    
  /routes/{routeId}/status/{routeStatusType}:        
    patch:
      tags:
        - Route Service
      parameters:
      - $ref: '#/components/parameters/RouteId'
      - $ref: '#/components/parameters/RouteStatusType'
      summary: Enable/Disable route
      description:  Enable/Disable a route
      responses:
        200:
          $ref: '#/components/responses/RouteBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /routes/checkpoint/{checkpointId}:
    get:
      tags:
        - Route Service
      summary: Retrieves route entries related to checkpoint
      description: Retrieves route entries related to checkpoint
      parameters:
      - $ref: '#/components/parameters/CheckpointId'
      responses:
        200:
          $ref: '#/components/responses/RouteListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /routes/site/{siteId}:
    get:
      tags:
        - Route Service
      summary: Retrieves route entries related to site
      description: Retrieves route entries related to site
      parameters:
      - $ref: '#/components/parameters/SiteId'
      responses:
        200:
          $ref: '#/components/responses/RouteListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /routes/{routeId}/checkpoint-details:
    get:
      tags:
        - Route Service
      summary: Retrieves set of route checkpoints related to route
      description: Retrieves set of route checkpoints related to route
      parameters:
      - $ref: '#/components/parameters/RouteId'
      responses:
        200:
          $ref: '#/components/responses/RouteCheckpointDetailListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
            
            
  /patrols:
    post:
      tags:
        - Patrol Service
      summary: Add a new patrol schedule
      description: Add a new patrol schedule
      requestBody:
        $ref: '#/components/requestBodies/PatrolPostRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
    
    put:
      tags:
        - Patrol Service
      summary: Carry out action on patrol event like STARTED,REASSIGNED,
                ABANDONED,  COMPLETED, DECLINED, SUSPENDED, RESTARTED,
                DISABLED, ACTIVATED.
      description: Carry out action on patrol event like STARTED,REASSIGNED,
                ABANDONED,  COMPLETED, DECLINED, SUSPENDED, RESTARTED,
                DISABLED, ACTIVATED.
      requestBody:
        $ref: '#/components/requestBodies/UpdatePatrolEventRequest'
     
      responses:
        200:
          $ref: '#/components/responses/ScheduleEventPutActionResultResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'  
          
    head:
      tags:
        - Patrol Service
      summary:  Retrieves patrol 'Last-Modified' in the request header
      description: 
        Retrieves patrol 'Last-Modified' in the request header
      responses:
        200:
          description: successful operation
        404:
          $ref: '#/components/responses/ErrorResponse'
          
    get:
      tags:
        - Patrol Service
      summary:  Retrieves Patrols By OrgId
      description: 
        Retrieves Patrols By OrgId
        Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entries and 'PageCount' max is 100.

      parameters:
      - $ref: '#/components/parameters/QuerySiteIds'
      - $ref: '#/components/parameters/RegionId'
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      - $ref: '#/components/parameters/FromDate'
      - $ref: '#/components/parameters/ToDate'
      responses:
        200:
          $ref: '#/components/responses/PatrolListPaginationResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
         
         
  /patrols/disabled-route-patrol/{routeId}/remove:
    delete:
      tags:
        - Patrol Service
      summary: Remove none running patrol and its dependencies via disabled route
      description: 
        Remove none running patrol and its dependencies via disabled route
      parameters:
      - $ref: "#/components/parameters/RouteId"
     
      responses:
        200:
          $ref: '#/components/responses/BooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'    
                      
          
  /patrols/synchronize-offline-data:       
    post:
      tags:
        - Patrol Service
      summary: Synchronise offline patrol data
      description: Synchronise offline patrol data
      requestBody:
        $ref: '#/components/requestBodies/PatrolEventSynchronisationPayloadRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /patrols/checkin/{scheduleEventId}:
    post:
      tags:
        - Patrol Service
      summary: Make a Check In While Patroling On A Checkpoint
      description: This Api makes a checkin entry in the database.
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      requestBody:
        $ref: '#/components/requestBodies/PatrolCheckinRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
          
   
    parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
    get:
      tags:
        - Patrol Service
      summary: Get Checkins Based On ScheduleEventId
      description: This Api Fetches The Set Of Checkins For A ScheduleEventId.
      responses:
        200:
          $ref: '#/components/responses/PatrolCheckInListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'  
  
  /patrols/schedule-event/{scheduleEventId}/linked-incidents:
    post:
      tags:
        - Patrol Service
      summary: Link patrol event to set of incidents.
      description: Link patrol event to set of incidents.
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      requestBody:
        $ref: '#/components/requestBodies/LinkedIncidentEventRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
                  
                  
  /patrols/linked-incident-events/{searchId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of patrol linked incidents.
      description: Retrieves set of patrol linked incidents. you could fetch linked incident events by numerous attributes like PATROL, ROUTE, EVENT, SCHEDULEEVENT, INCIDENT, CHECKPOINT, EMAIL,ORG.
          
      parameters:
         - $ref: '#/components/parameters/SearchId'
         - $ref: '#/components/parameters/SearchBy'
      responses:
        200:
          $ref: '#/components/responses/PatrolLinkedIncidentEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'  
  
                  
                  
  /patrols/patrol-event-histories/{searchId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of patrol event histories.
      description: Retrieves set of patrol event histories with searchBy attributes like PATROL, ROUTE, EVENT, SCHEDULEEVENT, ORG.
          
      parameters:
        - $ref: '#/components/parameters/SearchId'
        - $ref: '#/components/parameters/HistorySearchBy'
        - $ref: "#/components/parameters/PageStart"
        - $ref: "#/components/parameters/PageCount"
        - $ref: '#/components/parameters/FromDate'
        - $ref: '#/components/parameters/ToDate'
      responses:
        200:
          $ref: '#/components/responses/PatrolEventHistoryListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
             
  /patrols/reporting/{searchId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of patrol reports.
      description: Retrieves set of patrol reports with searchBy attributes like ORG, ROUTE, PATROL, EVENT, SCHEDULEEVENT, ASSIGNEDTO.
          
      parameters:
        - $ref: '#/components/parameters/SearchId'
        - $ref: '#/components/parameters/ReportSearchBy'
        - $ref: '#/components/parameters/ReportType'
        - $ref: "#/components/parameters/PageStart"
        - $ref: "#/components/parameters/PageCount"
        - $ref: '#/components/parameters/FromDate'
        - $ref: '#/components/parameters/ToDate'
      responses:
        200:
          $ref: '#/components/responses/PatrolReportListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
  /patrols/patrol-events/{patrolId}:
    parameters:
      - $ref: '#/components/parameters/PatrolId'
      - $ref: '#/components/parameters/QueryDisabled'
    put:
      tags:
        - Patrol Service
      summary: To disable or enable all events in patrol
      description: To disable or enable all events in patrol
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  /patrols/re-assign-events:
    put:
      tags:
        - Patrol Service
      summary: Re-assign patrol event to another user
      description: Re-assign patrol event to another user
      requestBody:
        $ref: '#/components/requestBodies/ReassignPatrolEventRequest'
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
          
  /patrols/{patrolId}:
    parameters:
      - $ref: '#/components/parameters/PatrolId'
      
    patch:
      tags:
        - Patrol Service
      summary: Update an existing patrol
      description: Update an existing patrol by Id
      requestBody:
        $ref: '#/components/requestBodies/PatrolPutRequest'
      responses:
        200:
          $ref: '#/components/responses/PatrolBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Patrol Service
      summary: Retrieves patrol entry
      description: Retrieves a single patrol
      responses:
        200:
          $ref: '#/components/responses/PatrolResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    
                  
  
  /patrols/events:
  
          
    head:
      tags:
        - Patrol Service
      summary:  Retrieves patrol event 'Last-Modified' in the request header
      description: 
        Retrieves patrol event 'Last-Modified' in the request header
      responses:
        200:
          description: successful operation
        404:
          $ref: '#/components/responses/ErrorResponse'
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of calendar schedule events related to event
      description: Retrieves calendar schedule events related to event
        Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entriesand 'PageCount' max is 10.

      parameters:
      - $ref: '#/components/parameters/QueryEventId'
      - $ref: '#/components/parameters/EventFromDate'
      - $ref: '#/components/parameters/EventToDate'
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      responses:
        200:
          $ref: '#/components/responses/PatrolEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'


  /patrols/system-events:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of calendar schedule events related to sites
      description: Retrieves calendar schedule events related to sites
         Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entriesand 'PageCount' max is 10.
      parameters:
      - $ref: '#/components/parameters/QuerySiteIds'
      - $ref: '#/components/parameters/RegionId'
      - $ref: '#/components/parameters/QueryScheduleEventId'
      - $ref: '#/components/parameters/EventFromDate'
      - $ref: '#/components/parameters/EventToDate'
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      responses:
        200:
          $ref: '#/components/responses/PatrolSystemEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  
  /patrols/schedule-event/{scheduleEventId}/checkpoint-details:
    get:
      tags:
        - Patrol Service
      summary: Retrieves set of route checkpoints related to patrol event
      description: Retrieves set of route checkpoints related to patrol event
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      responses:
        200:
          $ref: '#/components/responses/PatrolCheckpointDatailResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

 
  /patrols/schedule-event/{scheduleEventId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves saved schedule event related to scheduleEvent 
      description: Retrieves saved schedule even related to scheduleEvent  
      parameters:
      - $ref: '#/components/parameters/ScheduleEventId'
      responses:
        200:
          $ref: '#/components/responses/PatrolScheduleEventResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
  /patrols/schedule-events/{eventId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieves saved schedule events related to event 
      description: Retrieves saved schedule events related to event  
      parameters:
      - $ref: '#/components/parameters/EventId'
      responses:
        200:
          $ref: '#/components/responses/PatrolScheduleEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
  /patrols/risk-agreement:
    post:
      tags:
        - Patrol Service
      summary: Accept risk agreement
      description: Accept risk agreement  
      requestBody:
        $ref: '#/components/requestBodies/RiskLicenseAcceptanceRequest'
      responses:
        201:
          $ref: '#/components/responses/PatrolGuidResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
    get:
      tags:
        - Patrol Service
      summary: Retrieve set of risk agreements
      description: Retrieve set of risk agreements
        Results may be paginated, if there are a high number of matches. This will be indicated by the
        presence of a non-empty 'pageStart' value in the reply. Calling the API again with the value of
        'pageStart' given as the 'pageStart' parameter will return further results. To retrieve all matching records,
        iterate calls to the service until the 'pageStart' value is omitted from the reply.

        Note that 'pageStart' is a string value, and must be submitted verbatim to retrieve additional pages.
        The content format of the string value can change at any time.

        Note that it is possible for the final 'page' of results to contain zero entries and 'PageCount' max is 100.

      parameters:
      - $ref: "#/components/parameters/PageStart"
      - $ref: "#/components/parameters/PageCount"
      responses:
        200:
          $ref: '#/components/responses/RiskLicenseAcceptanceListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
  
  /patrols/risk-agreement/{patrolId}:
    get:
      tags:
        - Patrol Service
      summary: Retrieve set of risk agreements
      description: Retrieve set of risk agreements
      parameters:
      - $ref: '#/components/parameters/PatrolId'
      responses:
        200:
          $ref: '#/components/responses/RiskLicenseAcceptanceListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /scheduling:
    post:
      tags:
        - Scheduling Service
      summary: Creates Google Events  
      description: Creates Google Events   
      requestBody:
        $ref: '#/components/requestBodies/ScheduleServiceEventRequest'
      responses:
        200:
          $ref: '#/components/responses/ScheduleServiceCreateEventResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse' 
          
  /scheduling/events:
    patch:
      tags:
        - Scheduling Service
      summary: Update Google Events  
      description: Update Google Events 
      requestBody:
        $ref: '#/components/requestBodies/ScheduleServicePatchEventRequest'
      responses:
        200:
          $ref: '#/components/responses/SchedulingServiceEventBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
 
  /scheduling/list:
    post:
      tags:
        - Scheduling Service
      summary: Retrieves Google Calendar events
      description:  Retrieves Google Calendar events
      requestBody:
        $ref: '#/components/requestBodies/ScheduleServiceEventListRequest'

      responses:
        200:
          $ref: '#/components/responses/SchedulingServiceEventListResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'           
          
  /calendars:
    post:
      tags:
        - Scheduling Service
      summary: Create schedule calendar for client 
      description: Create schedule calendar for client
      requestBody:
        $ref: '#/components/requestBodies/CalandarPayloadRequest'
      responses:
        200:
          $ref: '#/components/responses/SchedulingServiceEventBooleanResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
          
    get:
      tags:
        - Scheduling Service
      summary: Get set of client's schedule calendar 
      description: Get set of client's schedule calendar 
      responses:
        200:
          $ref: '#/components/responses/CalandarResponseDataResponse'
        400:
          $ref: '#/components/responses/ErrorResponse'
        401:
          $ref: '#/components/responses/ErrorResponse'
        403:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    

  # /scheduling/list/count:
  #   post:
  #     tags:
  #       - Scheduling Service
  #     summary: Retrieves Google Calendar events
  #     description:  Retrieves Google Calendar events
  #     requestBody:
  #       $ref: '#/components/requestBodies/ScheduleServiceEventListRequestCount'

  #     responses:
  #       200:
  #         $ref: '#/components/responses/SchedulingServiceEventListResponse'
  #       400:
  #         $ref: '#/components/responses/ErrorResponse'
  #       401:
  #         $ref: '#/components/responses/ErrorResponse'
  #       403:
  #         $ref: '#/components/responses/ErrorResponse'
  #       500:
  #         $ref: '#/components/responses/ErrorResponse'            

     
  
     
components:
  securitySchemes:
    AWSAuthtoken:
      type: apiKey
      description: 'AWS Cognito format IdToken. Required for all calls to Patrol services'
      name: Authorization
      in: header
    AWSApiKey:
      name: x-api-key
      in: header
      type: apiKey
      description: 'AWS API Gateway format ApiKey. Required for all calls to Patrol services'
  parameters:
    # ContextId:
    #   name: x-context-id
    #   in: header
    #   description: 'Optional context id for tracing'
    #   required: false
    #   schema:
    #     type: string
    SearchId:
      name: searchId
      in: path
      description: searchId depends on searchBy value.
      required: true
      schema:
        type: string
    SearchBy:
      name: searchBy
      in: query
      description: SearchBy values are ["ORG","ROUTE","PATROL","EVENT", "SCHEDULEEVENT", "INCIDENT","CHECKPOINT","EMAIL"].
          Based on the selected searchBy value you enter the appropriate searchId.
      required: true
      schema:
        type: string
    HistorySearchBy:
      name: searchBy
      in: query
      description: SearchBy values are ["ORG","ROUTE","PATROL","EVENT","SCHEDULEEVENT"].
          Based on the selected searchBy value you enter the appropriate searchId.
      required: true
      schema:
        type: string
    ReportSearchBy:
      name: searchBy
      in: query
      description: SearchBy values are ["ORG","ROUTE","PATROL","EVENT","SCHEDULEEVENT","ASSIGNEDTO"].
          Based on the selected searchBy value you enter the appropriate searchId.
      required: true
      schema:
        type: string
    ReportType:
      name: reportType
      in: query
      description: Report Types are ["NOT STARTED","COMPLETED","OVERDUE","SUSPENDED","DISABLED","DECLINED","ABANDONED","NOT FINISHED","MISSED CHECKPOINT"].
      required: true
      schema:
        type: string
    EventId:
      name: eventId
      in: path
      description: Event Id
      required: true
      schema:
        type: string
    ScheduleEventId:
      name: scheduleEventId
      in: path
      description: Scheduled Event Id (Sub Event)
      required: true
      schema:
        type: string
        
    QueryDisabled:
      name: disabled
      in: query
      description: Disable or enable item
      required: true
      schema:
        type: boolean
    UserIdentity:
      name: userIdentity
      in: path
      description: User email
      required: true
      schema:
        type: string
    PatrolId:
      name: patrolId
      in: path
      description: Patrol Id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    CheckpointStatusType:
      name: checkpointStatusType
      in: path
      description: Status
      required: true
      schema:
        $ref: '#/components/schemas/CheckpointStatus'
    RouteStatusType:
      name: routeStatusType
      in: path
      description: Status
      required: true
      schema:
        $ref: '#/components/schemas/RouteStatus'
       
    RouteId:
      name: routeId
      in: path
      description: Route Id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    CheckpointId:
      name: checkpointId
      in: path
      description: Checkpoint Id
      required: true
      schema:
        $ref: '#/components/schemas/Guid'
    SiteId:
      name: siteId
      in: path
      description: Site Id
      required: true
      schema:
        type: integer
    QuerySiteId:
      name: siteId
      in: query
      description: Site Id
      required: false
      schema:
        type: string
    QueryScheduleEventId:
      name: scheduleEventId
      in: query
      description: ScheduleEvent Id
      required: false
      schema:
        type: string
    RegionId:
      name: regionId
      in: query
      description: Region Id
      required: false
      schema:
        type: string
    QuerySiteIds:
      name: siteIds
      in: query
      description: Collection of Site Ids separated by comma like "2,4,5,6,7"
      required: false
      schema:
        type: string
    RiskAssessmentId:
      name: riskAssessmentId
      in: path
      description: Risk Assessment Id
      required: true
      schema:
        type: string
    QueryEventId:
      name: eventId
      in: query
      description: Event Id
      required: false
      schema:
        type: string
    EventFromDate:
      name: fromDate
      in: query
      description: The beginning of the date range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      required: false
      schema:
        type: string
        format: date-time
    EventToDate:
      name: toDate
      in: query
      description: The end of the date range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      schema:
        type: string
        format: date-time
    FromDate:
      name: fromDate
      in: query
      description: The beginning of the date range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      required: false
      schema:
        type: string
        format: date-time
    ToDate:
      name: toDate
      in: query
      description: The end of the date range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      schema:
        type: string
        format: date-time
    
    PageStart:
      name: pageStart
      in: query
      description: Token used to Retrieves additional matches
      required: true
      schema:
        type: string
    
    PageCount:
      name: pageCount
      in: query
      description: Token used to Retrieves total records
      required: false
      schema:
        type: string

    Limit:
      name: limit
      in: query
      description: Total Records To Be Queried
      required: false
      schema:
        type: string
        
    
    Timestamp:
      name: timeStamp
      in: query
      description: Timestamp in "YYYY-MM-DDTHH:MM:SS"
      required: true
      schema:
        type: string  
    
    Page:
      name: page
      in: query
      description: Records To Be Skipped ,if the limit is 10 and page is 1,total Records skipped would be 10x1=10
      required: false
      schema:
        type: string    
  schemas:
    Guid:
      title: A GUID Identifier
      description: A Guid identifier
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    GuidObject:
      title: A GUID Identifier Object
      description: A Guid identifier
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Guid'
    DateTime:
      title: A Date & Time
      description: Datetime range (UTC), formatted as "YYYY-MM-DDTHH:MM:SS" (e.g. "1969-07-21T02:56:15")
      type: string
      format: date-time
    BooleanStatus:
      title: Entry Creation
      type: object
      properties:
        flag:
          type: boolean
    Numeric:
      title: Entry Numeric Data
      type: number
      format: float
      pattern: '\-?\d+\.\d+'
      
    Time:
      title: Entry Time Data (time in seconds)
      type: integer
      format: int64
      pattern: '^[0-9]*$' 
      
    CheckpointStatus:
      type: string
      description: Checkpoint Status
      readOnly: true
      example: 'ENABLED'
      enum:
        - ENABLED
        - DISABLED
    RouteStatus:
      type: string
      description: Route Status
      example: 'ENABLED'
      enum:
        - ENABLED
        - DISABLED 
    PatrolStatus:
      type: string
      description: Patrol Event Status
      example: 'READY'
      enum:
         - PENDING
         - STARTED
         - STARTED - EARLY
         - STARTED - LATE
         - ABANDONED
         - DECLINED
         - SUSPENDED
         - RESTARTED
         - REASSIGNED
         - DISABLED
         - ACTIVATED
         - COMPLETED
         - COMPLETED - WITH EVENT REPORTED
         - COMPLETED - INCOMPLETE ACTIONS
         - COMPLETED - MISSED CHECKPOINTS
         - COMPLETED - MISSED CHECKPOINTS - WITH EVENT REPORTED
         - COMPLETED - LATE
         - COMPLETED - LATE - WITH EVENT REPORTED
         - COMPLETED - LATE - MISSED CHECKPOINTS
         - COMPLETED - LATE - MISSED CHECKPOINTS - WITH EVENT REPORTED
         - COMPLETED - EARLY
         - COMPLETED - EARLY - WITH EVENT REPORTED
         - COMPLETED - EARLY - MISSED CHECKPOINTS
         - COMPLETED - EARLY - MISSED CHECKPOINTS - WITH EVENT REPORTED
         - IN PROGRESS
         - IN PROGRESS - WITH EVENT REPORTED
         - IN PROGRESS - MISSED CHECKPOINTS - WITH EVENT REPORTED
         - IN PROGRESS - INCOMPLETE ACTIONS
         - IN PROGRESS - MISSED CHECKPOINTS
         - IN PROGRESS - OVERDUE NOT COMPLETED
         - IN PROGRESS - OVERDUE NOT COMPLETED - WITH EVENT REPORTED
         - OVERDUE - NOT STARTED
        
    PatrolStatusAction:
      type: string
      description: Patrol Event Status Action
      example: 'STARTED'
      enum:
        - STARTED
        - ABANDONED
        - COMPLETED
        - DECLINE
        - SUSPENDED
        - RESTARTED
        - DISABLED
        - ACTIVATED 
        - REASSIGNED
        
    Error:
      title: Error Response
      type: object
      properties:
        msg:
          type: string
          
    
    # Checkpoint Data     
    CheckpointGuid:
      title: Checkpoint Guid Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/GuidObject'
    CheckpointBoolean:
      title: Checkpoint Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'
    VerificationTypeEntryData:
      title: Verification Type Entry
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
          readOnly: true
        name:
          type: string
        title:
          type: string
    
    CheckpointList:
      title: Set of Checkpoint Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/CheckpointEntriesData'
          
    Checkpoint:
      title: Checkpoint Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          $ref: '#/components/schemas/CheckpointEntryData'
   
    Verification:
      title: Verification Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/VerificationTypesEntryStruct'
        data:
          type: array
          items:
            $ref: '#/components/schemas/VerificationTypeEntryData'
    
    VerificationTypesEntryStruct:
      title: Struct Definition for Checkpoint
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"VerificationTypes","v":"V1"}'  
      
    CheckpointEntryStruct:
      title: Struct Definition for Checkpoint
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Checkpoint","v":"V1"}'  
      
    CheckpointEntriesData:
      title: Set of checkpoint Entries
      type: array
      items:
        $ref: '#/components/schemas/CheckpointEntryData'
      minItems: 0
      
    LocationData:
      title: Location Entry
      type: object
      
      properties:
        latitude:
          allOf:
            - $ref: '#/components/schemas/Numeric'
        longitude:
          allOf:
            - $ref: '#/components/schemas/Numeric'
    ImageMetaData:
      title: ImageMetaData
      type: object
      
      properties:
        imageId:
          type: string
        name:
          type: string
        latitude:
          allOf:
            - $ref: '#/components/schemas/Numeric'
        longitude:
          allOf:
            - $ref: '#/components/schemas/Numeric'
                

    CheckpointDisableData:
      title: Checkpoint Disable/Enable
      type: object
      required:
        - isDisabled
      properties:  
        isDisabled:
           type: number
           format: number
           example: 1
    
    
    CheckpointSynchronisationOutputData:
    
      title: Checkpoint Synchronisation Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/CheckpointEntryStruct'
        data:
          title: Checkpoint Synchronisation Output
          type: object 
          properties:
            numberOfCheckpointsAdded:
              type: integer
            numberOfCheckpointsUpdated:
              type: integer
            message:
              type: array
              items:
                type: string   
                
                
    CheckpointSynchronisationPayload:
      title: Synchronise checkpoint entries with associated checkpoints
      type: array
      items:
        $ref: '#/components/schemas/CheckpointSynchronisationData'
      
   
    CheckpointSynchronisationData:
      title: Checkpoint Entry
      type: object
      properties:
        
        isNew:
          type: boolean
        isUpdated:
          type: boolean
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Checkpoint Id
        siteId:
          type: number
          title: Site Id  
        verificationTypeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Verification Type Id
        name:
          type: string
          format: string
          example: 'Checkpiont 1'
        location:
          $ref: '#/components/schemas/LocationData'
        referenceImages:
          type: array
          items:
            type: string
        imageMetaData: 
          $ref: '#/components/schemas/ImageMetaData'
        plotLocation:
          type: boolean
        toleranceInMeter:
          type: number
          format: float
          description: actually tolerance value
          example: 40
        status:
          $ref: '#/components/schemas/CheckpointStatus'
        uniqueReferenceId:
          type: string
        description:
          type: string
        note:
          type: string
        risks:
          type: string  
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
        modifyDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied

    CheckpointEntryData:
      title: Checkpoint Entry
      type: object
      required:
        - name
        - siteId
        - verificationTypeId
        - location
      properties:
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Checkpoint Id
          readOnly: true
        siteId:
          type: number
          title: Site Id  
        verificationTypeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Verification Type Id
        name:
          type: string
          format: string
          example: 'Checkpiont 1'
        location:
          $ref: '#/components/schemas/LocationData'
        referenceImages:
          type: array
          items:
            type: string
        imageMetaData: 
          $ref: '#/components/schemas/ImageMetaData'
        plotLocation:
          type: boolean
        toleranceInMeter:
          type: number
          format: float
          description: actually tolerance value
          example: 40
        status:
          $ref: '#/components/schemas/CheckpointStatus'
        description:
          type: string
        note:
          type: string
        risks:
          type: string  
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifyDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating entry. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the entry. Default to current use if not supplied
          readOnly: true
        createdByName:
          type: string
          readOnly: true
        modifiedByName:
          type: string
          readOnly: true
   
    
    
    # Route Data
    
    RouteEntryStruct:
      title: Struct Definition for Route
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Route","v":"V1"}'  
    
    RouteGuid:
      title: Route Guid Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/GuidObject'
          
    RouteBoolean:
      title: Route Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'      
    RouteList:
      title: Set of Route Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteEntriesData'    
          
    RouteListPagination:
      title: Set of Route Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteEntriesData'
        totalRecordCount:
          type: number
          
    Route:
      title: Route Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteEntryData'
          
    ValidateCheckpoint:
      title: Route Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          items:
            properties:
              checkpointId:
                $ref: '#/components/schemas/Guid'
              isRouteActive:
                type: boolean
          
    RouteCheckpoint:
      title: Route Checkpoints Entries Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          $ref: '#/components/schemas/RouteCheckpointEntryData'
   
    RouteCheckpointDetailList:
      title: Checkpoints Entries Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/RouteCheckpointDatailData'
       
   
          
    RouteEntriesData:
      title: Set of Route Entries
      type: array
      items:
        $ref: '#/components/schemas/RouteEntryData'
      minItems: 0
    
    RouteCheckpointEntryData:
      title: Route Entry along with Checkpoints Entries
      type: object
      properties:
        route:
          allOf:
            - $ref: '#/components/schemas/RouteEntryData'
          title: Route 
        checkpoints:
          items:
              $ref: '#/components/schemas/RouteCheckpointData'
              
              
    RouteCheckpointSynchronisationPayload:
      title: Synchronise route entries with associated checkpoints
      type: array
      items:
          $ref: '#/components/schemas/RouteSynchronisationEntryData'
     
        
              
    RouteCheckpointDatailData:
      allOf:
        - $ref: '#/components/schemas/CheckpointEntryData'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
            timeFrame:
              allOf:
                - $ref: '#/components/schemas/Time'
              title: Time Frame(In Seconds)
            tolerance:
              allOf:
                - $ref: '#/components/schemas/Time'
              title: Tolerance(In Seconds)
            position:
              type: integer
              format: int

    
    RouteCheckpointData:
      title: Route Entry along with set of Checkpoint
      type: object   
      properties:
        checkpointId:
          $ref: '#/components/schemas/Guid'
        siteId:
          type: integer
          format: int
          
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        position:
          type: integer
          format: int
        tags:
          type: array
          items:
            type: string
    
    
    RouteSynchronisationOutputData:
    
      title: Route Synchronisation Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/RouteEntryStruct'
        data:
          title: Route Synchronisation Output
          type: object 
          properties:
            numberOfRoutesAdded:
              type: integer
            numberOfRoutesUpdated:
              type: integer
            numberOfCheckpointsAdded:
              type: integer
            numberOfCheckpointsUpdated:
              type: integer
            message:
              type: array
              items:
                type: string
          
    
    RouteCheckpointSynchronisationEntryData:
      title: Route Entry along with set of Checkpoint
      type: object   
      properties:
      
        checkpointId:
          $ref: '#/components/schemas/Guid'
        
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        siteId:
          type: integer
          format: int
        position:
          type: integer
          format: int
        tags:
          type: array
          items:
            type: string
            
    RouteSynchronisationEntryData:
      title: Route Synchronisation Entry
      type: object 
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        name:
          type: string
          format: string
          example: 'Route 1'
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        
        isRouteTimeFrame:
          type: boolean
        status:
          $ref: '#/components/schemas/RouteStatus'
        description:
          type: string
        note:
          type: string
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
        checkpoints:
          items:
              $ref: '#/components/schemas/RouteCheckpointSynchronisationEntryData'
              
              
        
      
    RouteEntryData:
      title: Route Entry
      type: object 
      required:
        - name
        - orgId
      properties:
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
          readOnly: true
        orgId:
          title: Organisation Id
          type: integer
          readOnly: true
        name:
          type: string
          format: string
          example: 'Route 1'
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        isRouteTimeFrame:
          type: boolean
        status:
          allOf:
            - $ref: '#/components/schemas/RouteStatus'
          readOnly: true
        isAssigned:
          type: boolean
          readOnly: true
        description:
          type: string
        note:
          type: string
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating entry. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the entry. Default to current use if not supplied
          readOnly: true
        createdByName:
          type: string
          readOnly: true
        modifiedByName:
          type: string
          readOnly: true
      
      
      
      
    # Patrol Data  
    PatrolGuid:
      title: Patrol Guid Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/GuidObject'
     
    PatrolBoolean:
      title: Patrol Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'
          
    PatrolList:
      title: Set of Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolEntryData'
    PatrolListPagination:
      title: Set of Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolEntryData'
        venue:
          items:
             properties:
              siteId:
                type: string
              siteName:
                type: string
        totalRecordCount: 
          type: number
          
    Patrol:
      title: Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/PatrolEntryData'
          
    PatrolEventList:
      title: Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolEventData'
        totalRecordCount: 
          type: number
          
    PatrolSystemEventList:
      title: Patrol Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolSystemEventData'
        totalRecordCount: 
          type: number
            
    RiskLicenseAcceptanceList:
      title: Risk License Acceptance
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/RiskLicenseAcceptanceData'
            
    PatrolCheckInList:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolCheckInData' 
         
    
    PatrolCheckpointDatailDataList:
      title: Set of Checkpoint Detail
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolCheckpointDatailData'
            
            
    ScheduleEventList:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/ScheduleEventGetData'
            
    ScheduleEvent:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/ScheduleEventGetData'
          
    ScheduleEventPutActionResultStruct:
      title: Set of Checkin Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          $ref: '#/components/schemas/ScheduleEventPutActionResult'
          
    PatrolLinkedIncidentEventList:
      title: Set of Patrol Linked Incident Events Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolLinkedIncidentEvent'
            
    PatrolEventHistoryList:
      title: Set of Patrol Event Histories Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          items:
            $ref: '#/components/schemas/PatrolEventHistory'
            
    PatrolPatrolReportList:
      title: Set of Patrol PatrolReports Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/PatrolEntryStruct'
        data:
          type: object
          properties:
            report:
              items:
                $ref: '#/components/schemas/PatrolReport'
            patrolCount:
              type: number
            routeCount:
              type: number
            reOccurringEventCount:
              type: number
            checkInCheckpointCount:
              type: number
            skippedCheckpointCount:
              type: number
            siteCount:
              type: number
            totalRecordCount:
              type: number

                    
    PatrolEntryStruct:
      title: Struct definition for Patrol
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"Patrol","v":"V1"}'

    
    CheckInTaskData:
      title: Checkin Task Entry
      type: object
      properties:
        task:
          type: string
        isCarriedOut:
          type: boolean
        description:
          type: string
    
    UploadedImageData:
      title: Checkin Upload Image
      type: object
      properties:
        imageId:
          type: string
          title: Image url
        note:
          type: string
          
    ScheduleEventData:
      type: object
      required:
        - patrolId
        - eventId
      properties:
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        eventId:
          type: string

       
    PatrolEventSynchronisationPayload:
      title: Synchronise patrol event entries with associated checkpoints
      type: array
      items:
          $ref: '#/components/schemas/PatrolSynchronisationEntryData'
                
    RiskLicenseAcceptanceSynchronisationData:
      title: Patrol Risk License Acceptance
      type: object
      properties: 
        accepted:
          type: boolean
          description: Accept risk license
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry.
          
    PatrolEventCheckpointSynchronisationEntryData:
      title: Patrol Entry along with set of Checkpoint
      type: object   
      properties:
        checkpointName:
          type: string
          format: string
        checkpointId:
          $ref: '#/components/schemas/Guid'
        siteId:
          type: integer
          format: int
        position:
          type: integer
          format: int
        isSkipped:
          type: boolean
          default: false
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry.
            
    PatrolSynchronisationEntryData:
      title: Patrol Synchronisation Entry
      type: object 
      properties:
        isUpdated:
          type: boolean
        scheduleEventId:
          type: string
          format: string
          example: 'ScheduleEventId 1'
        
        eventId:
          type: string
          format: string
          example: 'EventId 1'
        eventName:
          type: string
          format: string
          example: 'Ptrol 1 Day 1'
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        status:
          $ref: '#/components/schemas/PatrolStatus'
        isRouteTimeFrame:
          type: boolean
        isRandomPatrol:
          type: boolean
        riskAssessmentId:
            type: string
            title: Risk Assessment Id 
        riskAssessmentSummary:
          type: string
          title: Risk Assessment summary  
        resourceDocs:
          type: array
          items:
            $ref: '#/components/schemas/PatrolResourceDocData'
        statusReason:
          type: string
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry.
        riskAssessment:
              $ref: '#/components/schemas/RiskLicenseAcceptanceSynchronisationData'
        checkpoints:
          items:
              $ref: '#/components/schemas/PatrolEventCheckpointSynchronisationEntryData'
        
        
        
            
    
    ScheduleEventGetData:
      title: Patrol Schedule Event
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Guid'
          readOnly: true
        assignedTo:
          type: string
          title: Assigned user
          readOnly: true
        assignedToName :
          type: string
          title: AssignedTo Name  
          readOnly: true
        previousAssignedTo:
          type: string
          title: Previous assigned user
          readOnly: true
        previousAssignedToName :
          type: string
          title: Previous assignedTo Name  
          readOnly: true  
        previousAssignedToDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          readOnly: true
        
        statusStartDoneBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id
          readOnly: true
        statusStartDoneByName :
          type: string
          title: Status Start Done by Name  
          readOnly: true  
          
        riskAssessmentId:
            type: string
            title: Risk Assessment Id 
        riskAssessmentSummary:
          type: string
          title: Risk Assessment summary  
        resourceDocs:
          type: array
          items:
            $ref: '#/components/schemas/PatrolResourceDocData'
        statusDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          readOnly: true
        status:
          $ref: '#/components/schemas/PatrolStatus'
        previousStatus:
          $ref: '#/components/schemas/PatrolStatus'
        previousStatusDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          readOnly: true
          
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
          readOnly: true
        modifiedTimeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Modified Time Frame(In Seconds)
          readOnly: true
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
          readOnly: true
        totalCheckpointCount:
          type: integer
          readOnly: true
        checkInCheckpointCount:
          type: integer
          readOnly: true
        checkpointActionCount:
          type: integer
          readOnly: true
        inCompletedCheckpointActionCount:
          type: integer
          readOnly: true
        isRouteTimeFrame:
          type: boolean
          readOnly: true
        isRandomPatrol:
          type: boolean
          readOnly: true
        PatrolType:
          type: string
          readOnly: true
        orgId:
          type: integer
          readOnly: true
        linkedIncidentEvents:
          type: array
          items:
            $ref: '#/components/schemas/LinkedIncidentEvent'
          readOnly: true
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating entry. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the entry. Default to current use if not supplied
          readOnly: true
        createdByName:
          type: string
          readOnly: true
        modifiedByName:
          type: string
          readOnly: true
              
    PatrolResourceDocData:
      title: Patrol Resource Document
      type: object
      required:
        - name
        - orgId
      properties:
        isRiskAssessment:
          type: boolean
        key:
          type: string
    
    RiskLicenseAcceptanceData:
      title: Patrol Risk License Acceptance
      type: object
      required:
        - riskId
        - patrolId
        - scheduleEventId
        - agree
      properties:
        riskAgreementId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Risk Agreement Id
          readOnly: true
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
          readOnly: true
        eventId:
          type: string
          title: Event Id
          readOnly: true
        scheduleEventId:
          type: string
          description: Scheduled EventId 
        accepted:
          type: boolean
          description: Accept risk license
        orgId:
          title: Organisation Id
          type: integer
          readOnly: true
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating record. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the record. Default to current use if not supplied
          readOnly: true 
        createdByName:
          type: string
          readOnly: true
        modifiedByName:
          type: string
          readOnly: true
          
    
    LinkedIncidentEvent:
      title: Linked Incident Event
      type: object
      properties:  
        scheduleEventId:
           type: string
        IncidentEventId:
           type: string
        CheckpointId:
          allOf:
            - $ref: '#/components/schemas/Guid'
            
            
    
    ScheduleEventPutActionResult:
      title: Linked Incident Event
      type: object
      properties:  
        status:
          allOf:
          - $ref: '#/components/schemas/PatrolStatus'
          - title: Patrol status
        started:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Patrol started datetime
        ended:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Patrol ended datetime
        duration:
          type: integer
          title: Duration in second
        completedBy:
          type: string
          title: Patrol completed by
    
    PatrolLinkedIncidentEvent:
      title: Linked Incident Event
      type: object
      properties:  
        scheduleEventLinkIncidentEventId:
           type: string
        scheduleEventId:
           type: string
        IncidentEventId:
           type: string
        CheckpointId:
          allOf:
            - $ref: '#/components/schemas/Guid'
        eventId:
           type: string
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
        orgId:
          title: Organisation Id
          type: integer
          readOnly: true
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating record. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the record. Default to current use if not supplied
          readOnly: true 
        createdByName:
          type: string
          readOnly: true
        modifiedByName:
          type: string
          readOnly: true
           
           
    PatrolEventData:
      title: Patrol Event
      type: object
      
      properties:
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        eventId:
          type: string
          description: EventId from google scheduler api(iCalUId)
        eventName:
          type: string
          description: Event Name
        routeName:
          type: string
          title: Route Name 
          readOnly: true 
        scheduleEventId:
          type: string
          description: Scheduled EventId from google scheduler api (id)
        assignedTo:
          type: string
          title: Assigned user
        assignedToName :
          type: string
          title: AssignedTo Name  
          readOnly: true 
       
          
        isRandomPatrol:
          type: boolean
          readOnly: true
        patrolType:
          type: string
          readOnly: true
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
          readOnly: true
        startDateAndTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
        endDateAndTime:
          allOf:
            - $ref: '#/components/schemas/DateTime'
        status:
          $ref: '#/components/schemas/PatrolStatus'
        statusSDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          readOnly: true
        previousStatus:
          $ref: '#/components/schemas/PatrolStatus'
        previousStatusDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          readOnly: true
          
        statusStartDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
          readOnly: true
        statusStartDoneBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id
          readOnly: true
        statusStartDoneByName :
          type: string
          title: Status Start Done by Name  
          readOnly: true 
        estimatedDuration:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Estimated Duration(In Seconds)
          readOnly: true
        actualInterval:
          type: integer
          title: This is the time taken between the last scheduled patrol of the same name using the ACTUAL end date and time and the ACTUAL start date and time of the patrol shown. e.g. Last patrol was finished '24/07/23 7:03am', and the next was started at  '24/07/23 10:08am', the interval would be '3:05' (hh:mm).Note, actualInterval will be in second.
          readOnly: true 
          
        linkedIncidentEvents:
          type: array
          items:
            $ref: '#/components/schemas/LinkedIncidentEvent'
          readOnly: true
        linkIncidentCount:
          type: integer
          title: Number of link incident
          readOnly: true
        
        report:
          properties:
            status:
              allOf:
              - $ref: '#/components/schemas/PatrolStatus'
              - title: Patrol status
            started:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Patrol started datetime
            ended:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Patrol ended datetime
            duration:
              type: integer
              title: Duration in second
            completedBy:
              type: string
              title: Patrol completed by
        
        reassignInfo:
          properties:
            reassignBy:
              type: string
              title: Patrol reassigned by
            reassignByName:
              type: string
              title: Patrol reassigned by name
            reassignDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Patrol started datetime
            
        modifiedTimeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Modified Time Frame(In Seconds)
          readOnly: true
        
        isRiskAssessmentMandatory:
          type: boolean
        isRiskAssessmentAccepted:
          type: boolean
        riskAssessmentId:
          type: string
          title: Risk Assessment Id 
        riskAssessmentSummary:
          type: string
          title: Risk Assessment summary  
        resourceDocs:
          type: array
          items:
            $ref: '#/components/schemas/PatrolResourceDocData'
       
        timeZone:
          type: string
        location:
          type: string
        description:
          type: string
      
      
        
           
    PatrolSystemEventData:
      title: Patrol System Event
      
      allOf:
        - $ref: '#/components/schemas/PatrolEventData'
      type: object
      
      properties:
        checkpointStat:
          properties:
            completedCheckpointCount:
              type: integer
              title: Number of checkpoints completed
            totalCheckpointCount:
              type: integer
              title: Total number of checkpoints
          
        checkpointActionStat:
          properties:
            completedActionCount:
              type: integer
              title: Number of checkpoint's action completed
            totalActionCount:
              type: integer
              title: Total number of checkpoint's action
              
        checkpointSites:
          type: array
          items:
            properties:
              checkpointId:
                type: string
              checkpointName:
                type: string
              siteId:
                type: string
              siteName:
                type: string
        
            
      
      
    PatrolCheckInData:
      title: CheckIn Payload
      type: object
      required:
        - siteId
        - checkpointId
        - scheduleEventId
       
      properties:
        id:
          # Returned by GET, not used in POST/PUT/PATCH
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Checkpoint Id
          readOnly: true
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id  
          readOnly: true
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
          readOnly: true
        scheduleEventId:
          type: string
          readOnly: true
        eventId:
          type: string
          readOnly: true
        checkpointId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: CheckPoint Id 
        siteId:
          type: integer
          title: Site Id  
        orgId:
          type: integer
          title: Org Id 
          readOnly: true 
        checkInTime:
          title: Checkin time (unix epoch timestamp)
          type: integer
          readOnly: true
        carriedTasks:
          items:
            $ref: '#/components/schemas/CheckInTaskData'
        uploadedImages:
          type: array
          items:
            $ref: '#/components/schemas/UploadedImageData'
        description:
          type: string
        isSkipped:
          type: boolean
          default: false
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
          readOnly: true
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Last modify date of entry. Default to now() if not supplied
          readOnly: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating record. Default to current use if not supplied
          readOnly: true
        modifiedBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id that last modified the record. Default to current use if not supplied
          readOnly: true  
        createdByName:
          type: string
          readOnly: true
        modifiedByName:
          type: string
          readOnly: true    
                   
    
    PatrolEventHistory:
      title: Patrol Event History
      type: object
       
      properties:
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id  
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        eventId:
          type: string
        scheduleEventId:
          type: string
        orgId:
          type: integer
          title: Org Id 
        status:
          $ref: '#/components/schemas/PatrolStatus'
        statusDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Status date of entry. 
        previousStatusDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Previous Status date of entry. 
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        description:
          type: string
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
        createdBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
            - title: User Id creating record. Default to current use if not supplied
        createdByName:
          type: string
                                
    
    PatrolReport:
      title: Patrol Report
      type: object
       
      properties:
        
        patrolId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Patrol Id  
        routeId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: Route Id
        eventId:
          type: string
        scheduleEventId:
          type: string
        routeName:
          type: string
        eventName:
          type: string
        assignedTo:
          type: string
        orgId:
          type: integer
          title: Org Id 
        isFinished:
          type: boolean
        reportType:
          type: string
          default: "NOT STARTED"
        status:
          $ref: '#/components/schemas/PatrolStatus'
        StatusDoneByName:
          type: string 
          title: User name that carried out such action. 
        statusReason:
          type: string
        statusDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Status date of entry. 
        statusStartDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
        statusStartDoneBy:
          allOf:
            - $ref: '#/components/schemas/Guid'
          title: User Id that started patrol. 
        statusStartDoneByName:
          type: string 
          title: User name that started patrol. 
        scheduleDate:
         allOf:
            - $ref: '#/components/schemas/DateTime'
         title: Schedule Date
        scheduleEndDate:
         allOf:
            - $ref: '#/components/schemas/DateTime'
         title: Schedule End Date
        patrolDuration:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Patrol Duration(In Seconds)
        linkedIncidentCount:
          type: number
        linkedIncidents:
          type: object
          properties:
            incidentEventId:
              type: string
            checkpointId:
              type: string
            checkpointName:
              type: string
          
        checkpointCount:
          type: number
        checkpoints:
          type: object
          properties:
            checkpointId:
              type: string
            checkpointName:
              type: string
            siteId:
              type: string
            siteName:
              type: string
          
        skippedCheckpointCount:
          type: number
        skippedCheckpoints:
          type: object
          properties:
            checkpointId:
              type: string
            checkpointName:
              type: string
            skippedTime:
              allOf:
                - $ref: '#/components/schemas/Time'   
        checkInCheckpointCount:
          type: number
        checkInCheckpoints:
          type: object
          properties:
            checkpointId:
              type: string
            checkpointName:
              type: string
            checkInTime:
              allOf:
                - $ref: '#/components/schemas/Time'
            carriedTasks:
              type: object 
              properties:
                task:
                  type: string
                isCarriedOut:
                  type: boolean
                description:
                  type: string
              
        siteCount:
          type: number
        sites:
          type: object
          properties:
            siteId:
              type: string
            siteName:
              type: string
           
        patrolType:
          type: string
        eventLocation:
          type: string
        eventTimeZone:
          type: string
        timeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Time Frame(In Seconds)
        modifiedTimeFrame:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Modified Time Frame(In Seconds) as a result of suspended patrol
        tolerance:
          allOf:
            - $ref: '#/components/schemas/Time'
          title: Tolerance(In Seconds)
        note:
          type: string
        description:
          type: string
        createdDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
        modifiedDate:
          allOf:
            - $ref: '#/components/schemas/DateTime'
            - title: Create date of entry. Default to now() if not supplied
        createdByName:
          type: string
        modifiedByName:
          type: string
                                    
                   
  
    PatrolPutEntryData:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          format: string
          example: 'Patrol 1'  
        eventId:
          type: string
          title: Event Id  
        isRiskAssessmentMandatory:
              type: boolean
        riskAssessmentId:
          type: string
          title: Risk Assessment Id 
        riskAssessmentSummary:
          type: string
          title: Risk Assessment Summary 
        resourceDocs:
              type: array
              items:
                $ref: '#/components/schemas/PatrolResourceDocData'
       
        isRepeated:
          type: boolean
          example: false
        assignedTo:
          type: string
          title: Assigned user
        assignedToName :
          type: string
          title: AssignedTo Name  
          readOnly: true 
        isRouteTimeFrame:
          type: boolean 
          readOnly: true 
        isRandomPatrol:
          type: boolean
        additionalInfo:
          type: string

    CheckPointByIdRequestData:
      title: CheckPoint By Ids
      type: object
      properties:
       
        checkpointIds:
          type: array
          items:
             type: string
          example: ["str1", "str2", "str3"]
            
    
    
    PatrolPostEntryData:
     allOf:
        - $ref: '#/components/schemas/PatrolPutEntryData'
        - type: object
          properties:
            routeId:
              allOf:
                - $ref: '#/components/schemas/Guid'
              title: Route Id 
            configuration:
              allOf:
                - $ref: '#/components/schemas/ScheduleServiceEventData'
              title: Schedule Configuration
            
              
    PatrolCheckpointDatailData:
      allOf:
        - $ref: '#/components/schemas/RouteCheckpointDatailData'
        - type: object
          properties:
            isSkipped:
              type: boolean
            isVerified:
              type: boolean
            isVerifiedOrSkipped:
              type: boolean
            uploadedImages:
              type: array
              items:
                $ref: '#/components/schemas/UploadedImageData'
            actions:
              items:
                $ref: '#/components/schemas/CheckInTaskData'
            verifiedReason:
              type: string
              
    PatrolEntryData:
       allOf:
        - $ref: '#/components/schemas/PatrolPostEntryData'
        - type: object
          properties:
            id:
              # Returned by GET, not used in POST/PUT/PATCH
              allOf:
                - $ref: '#/components/schemas/Guid'
              title: Patrol Id
              readOnly: true
            orgId:
              title: Organisation Id
              type: integer 
              readOnly: true
            routeName:
              type: string
              title: Route Name 
              readOnly: true 
            isScheduled:
              type: boolean
              example: true
              readOnly: true 
            scheduleDate:
             allOf:
                - $ref: '#/components/schemas/DateTime'
             title: Schedule Date
            scheduleEndDate:
             allOf:
                - $ref: '#/components/schemas/DateTime'
             title: Schedule End Date
            IsStarted:
              type: boolean
              readOnly: true 
            IsDisabled :
              type: boolean
              readOnly: true 
            IsFinished:
              type: boolean
              readOnly: true 
            PatrolType:
              type: string
              readOnly: true
            timeFrame:
              allOf:
                - $ref: '#/components/schemas/Time'
              title: Time Frame(In Seconds)
            tolerance:
              allOf:
                - $ref: '#/components/schemas/Time'
              title: Tolerance(In Seconds) 
            totalEventCount:
              type: number
              readOnly: true
            processedEventCount:
              type: number
              readOnly: true
            linkedIncidentEvents:
              type: array
              items:
                $ref: '#/components/schemas/LinkedIncidentEvent'
              readOnly: true
              
            createdDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Create date of entry. Default to now() if not supplied
              readOnly: true
            modifiedDate:
              allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Last modify date of entry. Default to now() if not supplied
              readOnly: true
            createdBy:
              allOf:
                - $ref: '#/components/schemas/Guid'
                - title: User Id creating entry. Default to current use if not supplied
              readOnly: true
            modifiedBy:
              allOf:
                - $ref: '#/components/schemas/Guid'
                - title: User Id that last modified the entry. Default to current use if not supplied
              readOnly: true
            createdByName:
              type: string
              readOnly: true
            modifiedByName:
              type: string
              readOnly: true
              
              
    ReassignPatrolEventData:
      title: Re-Assign Patrol Events
      type: object
      properties:
        scheduleEventId:
          type: string
          title: Event Id   Of the event Created
        assignedTo:
          type: string
          title: Assign User 
          description: abc@xyz.com
        descripion:
          type: string        
              
              
              
              

    # Scheduling Service data
    
    
    ScheduleServiceEventStruct:
      title: Struct definition for ScheduleServiceEvent
      type: object
      properties:
        c:
          type: string
        v:
          type: string
          pattern: '^V\d$'
      example: '{"c":"SchedulingEvent","v":"V1"}' 
      
    SchedulingServiceEventBoolean:
      title: Patrol Boolean Definition
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/ScheduleServiceEventStruct'
        data:
          $ref: '#/components/schemas/BooleanStatus'
          
    ScheduleEventListResponse:
      title: Set of Events
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/ScheduleServiceEventStruct'
        data:
         type: array
         items:
          $ref: '#/components/schemas/ScheduleServiceEventBaseData'
          
    CalandarPayload:
      type: object
      required:
        - summary
        - orgId
      properties:
        summary:
          type: string  
        orgId:
          description: Client orgId
          type: number  
          
    CalandarResponseData:
      title: Set of Events
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/ScheduleServiceEventStruct'
        data:
          type: array
          items:
            properties:
              summary:
                type: string  
              orgId:
                description: Client orgId
                type: number       
              createdDate:
               allOf:
                - $ref: '#/components/schemas/DateTime'
                - title: Create date of entry. Default to now() if not supplied
              modifiedDate:
                allOf:
                  - $ref: '#/components/schemas/DateTime'
                  - title: Last modify date of entry. Default to now() if not supplied
              createdBy:
                allOf:
                  - $ref: '#/components/schemas/Guid'
                  - title: User Id creating entry. Default to current use if not supplied
              modifiedBy:
                allOf:
                  - $ref: '#/components/schemas/Guid'
                  - title: User Id that last modified the entry. Default to current use if not supplied
              
    ScheduleServiceEventCreateResponseData:
      title: Set of Events
      type: object
      properties:
        struct:
          $ref: '#/components/schemas/ScheduleServiceEventStruct'
        data:
          type: object
          properties:
            eventId:
              type: string
              title: Event Id   Of the event Created
            IcalUId:
              type: string
              title: IcalUId Unique  Id   Of the event Created 
      
    ScheduleServiceEventCreate:
      title: Event Create Response Of Scheduling Service
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScheduleServiceEventCreateResponseData'

    ScheduleServiceEventBaseData:
      type: object
      required:
        - summary
        - startDateAndTime
        - endDateAndTime
        - recurrence
        - timeZone
      properties:
        summary:
          type: string  
        startDateAndTime:
          description: StartDateTime Should Be RFC3339 Compatible ex - 2006-01-02T15:04:05-07:00,-07:00 is the timezone offset
          type: string  
        endDateAndTime:
          description: EndDateTime Should Be RFC3339 Compatible ex - 2006-01-02T15:04:05-07:00,-07:00 is the timezone offset
          type: string 
        recurrence:
           type: string
        timeZone:
            type: string
            
  
    ScheduleServicePatchEventData:
      type: object
      required:
        - recurringEventId
        - feedBackMessage
      properties:
        recurringEventId:
          type: string 
          description: This is the scheduleEventId
        feedBackMessage:
          type: string 
          description: This is return when error is encounter
        summary:
          type: string  
        location:
          type: string  
        startDateAndTime:
          description: StartDateTime Should Be RFC3339 Compatible ex - 2006-01-02T15:04:05-07:00,-07:00 is the timezone offset
          type: string  
        endDateAndTime:
          description: EndDateTime Should Be RFC3339 Compatible ex - 2006-01-02T15:04:05-07:00,-07:00 is the timezone offset
          type: string 
        timeZone:
            type: string


    ScheduleServiceEventData:
      type: object
      required:
        - summary
        - startDateAndTime
        - endDateAndTime
        - recurrence
        - interval
        - count
        - days
        - timeZone
      properties:
      
        summary:
          type: string  
        days:
          type: array
          items:
            type: string
            enum: ["SU", "MO","TU","WE","TH","FR","SA"] 
        startDateAndTime:
          description: StartDateTime Should Be RFC3339 Compatible ex - 2006-01-02T15:04:05-07:00,-07:00 is the timezone offset
          type: string  
        count:
          type: number 
        interval:
          description: Works together with FREQ to specify how often the event should be repeated. For example, FREQ=DAILY;INTERVAL=2 means once every two days.
          type: number   
        endDateAndTime:
          description: EndDateTime Should Be RFC3339 Compatible ex - 2006-01-02T15:04:05-07:00,-07:00 is the timezone offset
          type: string   
        recurrence:
           type: string 
        timeZone:
            type: string
    


    ScheduleServiceListPayloadData:
      type: object
      required:
        - maxResults
      properties:
        maxResults:
          type: number 
        startDate:
          type: string
        endDate:
          type: string 
        query:
           type: string
        eventId:
            type: string    


    ScheduleServiceListCountPayloadData:
      type: object
      required:
        - maxResults
      properties:
        eventId:
            type: string
                  
                   
     
     
  responses:
    CheckpointGuidResponse:
      description: Return checkpoint id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointGuid'
    CheckpointBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointBoolean'  
    RouteGuidResponse:
      description: Return route id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteGuid'
    RouteBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteBoolean'        
    PatrolGuidResponse:
      description: Return patrol id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolGuid' 
    PatrolBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolBoolean'
    SchedulingServiceEventBooleanResponse:
      description: Return boolean
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SchedulingServiceEventBoolean' 
            
    ErrorResponse:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BooleanResponse:
      description: Entry For created/updated response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BooleanStatus'
            
    VerificationResponse:
      description: Set of verification type entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Verification'   
    CheckpointListResponse:
      description: Set of checkpoint entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointList'
    CheckpointResponse:
      description: Checkpoint entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Checkpoint'
               
    
    CheckpointSynchronisationResponse:
      description: Synchronisation of offline checkpoint data response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointSynchronisationOutputData'
            
    RouteSynchronisationResponse:
      description: Synchronisation of offline route data response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteSynchronisationOutputData'  
 
    RouteListResponse:
      description: Set of route entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteList' 
    ValidateCheckpointResponse:
      description: Set of checkpoint validilities response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidateCheckpoint' 
    
    RouteListPaginationResponse:
      description: Set of route entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteListPagination' 
            
    RouteCheckpointDetailListResponse:
      description: Set of route entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpointDetailList'
            
    RouteResponse:
      description: Route entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Route'
   
    RouteCheckpointResponse:
      description: Route along with checkpoint entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpoint'
    PatrolListResponse:
      description: Set of patrol entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolList'
    PatrolListPaginationResponse:
      description: Set of patrol entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolListPagination'
    PatrolEventListResponse:
      description: Set of patrol event entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolEventList'
    PatrolSystemEventListResponse:
      description: Set of patrol event entries response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolSystemEventList'
    PatrolCheckInListResponse:
      description: CheckIn entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolCheckInList' 
    PatrolResponse:
      description: Patrol entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Patrol' 
    PatrolScheduleEventResponse:
      description: Schedule Action Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEvent'
    PatrolScheduleEventListResponse:
      description: Schedule action response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventList'

    PatrolCheckpointDatailResponse:
      description: Patrol entry response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolCheckpointDatailDataList'
            
    RiskLicenseAcceptanceListResponse:
      description: Patrol risk license acceptance response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskLicenseAcceptanceList'
            
    PatrolLinkedIncidentEventListResponse:
      description: Patrol linked incident event response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolLinkedIncidentEventList' 
            
    ScheduleEventPutActionResultResponse:
      description: Schedule event response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventPutActionResultStruct'
            
    SchedulingServiceEventListResponse:
      description: Schedule action response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventListResponse'          

    CalandarResponseDataResponse:
      description: Calendar response 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalandarResponseData' 

    ScheduleServiceCreateEventResponse:
      description: Schedule service event create response 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceEventCreate' 
            
    PatrolEventHistoryListResponse:
      description: Patrol event histories response 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolEventHistoryList' 
            
    PatrolReportListResponse:
      description: Patrol reports response 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolPatrolReportList'       
            
            
            
            
  requestBodies:
    CheckpointRequest:
      description: Checkpoint entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointEntryData'
    CheckpointDisableRequest:
      description: Checkpoint Disable request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CheckpointDisableData'        
    
    PatrolScheduleEventRequest:
      description: Schedule Action Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleEventData' 

    ScheduleServiceEventRequest:
      description: Schedule Service Create Event  Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceEventData' 
            
    CalandarPayloadRequest:
      description: Create Client  Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CalandarPayload' 
            
    ScheduleServicePatchEventRequest:
      description: Schedule Service Update/Patch Event
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ScheduleServicePatchEventData'          

    ScheduleServiceEventListRequest:
      description: Schedule Service  Event  List Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceListPayloadData' 


    ScheduleServiceEventListRequestCount:
      description: Schedule Service  Event  List Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleServiceListCountPayloadData'                   
                    
  
    PatrolCheckinRequest:
      description: CheckIn  request Payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolCheckInData'  
            
    RouteCheckpointRequest:
      description: Route entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpointEntryData'
    
    CheckpointSynchronisationPayloadRequest:
      description: Synchronisation of Offline Checkpoint Data
      content:
        application/json:
          schema:
             $ref: '#/components/schemas/CheckpointSynchronisationPayload'
            
    RouteCheckpointSynchronisationPayloadRequest:
      description: Synchronisation of Offline Route Data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RouteCheckpointSynchronisationPayload' 
            
    PatrolEventSynchronisationPayloadRequest:
      description: Synchronisation of Offline Patrol Data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolEventSynchronisationPayload'
            
    PatrolPostRequest:
      description: Patrol entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolPostEntryData'
            
    ReassignPatrolEventRequest:
      description: Reassign Patrol Event Entry Request
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReassignPatrolEventData'
            
    RiskLicenseAcceptanceRequest:
      description: Patrol risk acceptance entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RiskLicenseAcceptanceData'
   
                  
    UpdatePatrolEventRequest:
      content:
        application/json:
          schema:
            properties:  
              scheduleEventId:
                type: string
                title: Event Id Of the event Created
              status:
                $ref: '#/components/schemas/PatrolStatusAction'
              statusReason:
                type: string        
              
            
    PatrolPutRequest:
      description: Patrol entry request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatrolPutEntryData'
            
    LinkedIncidentEventRequest:
      description: Patrol linked incident request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkedIncidentEvent'

    CheckPointbyIdsRequest:
        description: CheckpointByIds
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPointByIdRequestData'


